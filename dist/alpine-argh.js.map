{
  "version": 3,
  "sources": ["../src/index.js", "../builds/browser.js"],
  "sourcesContent": ["export default function (Alpine) {\n  // The directive\n  Alpine.directive('argh', (el, { value, modifiers, expression }, { effect, evaluate }) => {\n    // Value is\n    // required\n    if (!value) {\n      return\n    }\n\n    let { argObj, argName, deep } = resolve(el._x_dataStack, expression)\n    const propObj = el._x_dataStack[0]\n    const propName = camelize(value)\n    const bind = argObj && modifiers.includes('bind')\n\n    let prevPropValue = propObj[propName]\n    let prevArgObj = argObj\n    let prevArgValue = undefined\n\n    effect(() => {\n      prevArgObj = argObj\n      deep && ({ argObj, argName, deep } = resolve(el._x_dataStack, expression))\n\n      if (argObj) {\n        // One-way binding\n        if (argObj[argName] !== prevArgValue || argObj !== prevArgObj) {\n          propObj[propName] = argObj[argName]\n        }\n\n        // Two-way binding\n        if (bind && propObj[propName] !== prevPropValue) {\n          argObj[argName] = propObj[propName]\n        }\n\n        prevArgValue = argObj[argName]\n        prevPropValue = propObj[propName]\n      } else {\n        // The evaluator is used in\n        // case that the argument is\n        // not a property of the parent\n        // component's data (one-way binding).\n        const argValue = evaluate(expression)\n\n        if (argValue !== prevArgValue) {\n          propObj[propName] = argValue\n          prevArgValue = argValue\n        }\n      }\n    })\n  })\n\n  /**\n   * Transforms an example-string into an exampleString.\n   *\n   * @param {string} s String to camelize\n   * @returns {string} The camelized string\n   */\n  function camelize(s) {\n    return s.replace(/-./g, (x) => x[1].toUpperCase())\n  }\n\n  /**\n   * Find the closest property from an expression by searching Alpine data\n   * stacks of the parent components.\n   *\n   * @param {object} stack Alpine data stack\n   * @param {string} expression The directive attribute value\n   * @returns {object} Resolved argument parameters\n   */\n  function resolve(stack, expression) {\n    let argObj = null\n    let argName = null\n    let deep = false\n\n    for (let i = 1; i < stack.length; i++) {\n      if (expression in stack[i]) {\n        argObj = stack[i]\n        argName = expression\n        break\n      } else if (expression.includes('.')) {\n        const dotNotation = expression.split('.')\n        const obj = dotNotation\n          .slice(0, -1)\n          .reduce((o, i) => (typeof o === 'object' ? o[i] : false), stack[i])\n\n        if (obj && /^[a-zA-Z0-9_$]+$/.test(last)) {\n          argObj = obj\n          argName = dotNotation[dotNotation.length - 1]\n          deep = obj !== stack[i]\n          break\n        }\n      }\n    }\n\n    return { argObj, argName, deep }\n  }\n}\n", "import argh from '../src/index.js'\n\ndocument.addEventListener('alpine:init', () => window.Alpine.plugin(argh))\n"],
  "mappings": ";;AAAe,uBAAU,QAAQ;AAE/B,WAAO,UAAU,QAAQ,CAAC,IAAI,EAAE,OAAO,WAAW,cAAc,EAAE,QAAQ,eAAe;AAGvF,UAAI,CAAC,OAAO;AACV;AAAA,MACF;AAEA,UAAI,EAAE,QAAQ,SAAS,SAAS,QAAQ,GAAG,cAAc,UAAU;AACnE,YAAM,UAAU,GAAG,aAAa;AAChC,YAAM,WAAW,SAAS,KAAK;AAC/B,YAAM,OAAO,UAAU,UAAU,SAAS,MAAM;AAEhD,UAAI,gBAAgB,QAAQ;AAC5B,UAAI,aAAa;AACjB,UAAI,eAAe;AAEnB,aAAO,MAAM;AACX,qBAAa;AACb,gBAAS,GAAE,QAAQ,SAAS,KAAK,IAAI,QAAQ,GAAG,cAAc,UAAU;AAExE,YAAI,QAAQ;AAEV,cAAI,OAAO,aAAa,gBAAgB,WAAW,YAAY;AAC7D,oBAAQ,YAAY,OAAO;AAAA,UAC7B;AAGA,cAAI,QAAQ,QAAQ,cAAc,eAAe;AAC/C,mBAAO,WAAW,QAAQ;AAAA,UAC5B;AAEA,yBAAe,OAAO;AACtB,0BAAgB,QAAQ;AAAA,QAC1B,OAAO;AAKL,gBAAM,WAAW,SAAS,UAAU;AAEpC,cAAI,aAAa,cAAc;AAC7B,oBAAQ,YAAY;AACpB,2BAAe;AAAA,UACjB;AAAA,QACF;AAAA,MACF,CAAC;AAAA,IACH,CAAC;AAQD,sBAAkB,GAAG;AACnB,aAAO,EAAE,QAAQ,OAAO,CAAC,MAAM,EAAE,GAAG,YAAY,CAAC;AAAA,IACnD;AAUA,qBAAiB,OAAO,YAAY;AAClC,UAAI,SAAS;AACb,UAAI,UAAU;AACd,UAAI,OAAO;AAEX,eAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,YAAI,cAAc,MAAM,IAAI;AAC1B,mBAAS,MAAM;AACf,oBAAU;AACV;AAAA,QACF,WAAW,WAAW,SAAS,GAAG,GAAG;AACnC,gBAAM,cAAc,WAAW,MAAM,GAAG;AACxC,gBAAM,MAAM,YACT,MAAM,GAAG,EAAE,EACX,OAAO,CAAC,GAAG,OAAO,OAAO,MAAM,WAAW,EAAE,MAAK,OAAQ,MAAM,EAAE;AAEpE,cAAI,OAAO,mBAAmB,KAAK,IAAI,GAAG;AACxC,qBAAS;AACT,sBAAU,YAAY,YAAY,SAAS;AAC3C,mBAAO,QAAQ,MAAM;AACrB;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAEA,aAAO,EAAE,QAAQ,SAAS,KAAK;AAAA,IACjC;AAAA,EACF;;;AC7FA,WAAS,iBAAiB,eAAe,MAAM,OAAO,OAAO,OAAO,WAAI,CAAC;",
  "names": []
}
